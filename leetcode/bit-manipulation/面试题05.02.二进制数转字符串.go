package leetcode

/*

二进制数转字符串。给定一个介于0和1之间的实数（如0.72），类型为double，
打印它的二进制表达式。如果该数字无法精确地用32位以内的二进制表示，则打印“ERROR”。

示例1:

 输入：0.625
 输出："0.101"


示例2:

 输入：0.1
 输出："ERROR"
 提示：0.1无法被二进制准确表示


提示：

32位包括输出中的 "0." 这两位。
题目保证输入用例的小数位数最多只有 6 位

*/

func printBin(num float64) string {
	result := []byte{}
	for len(result) < 32 && num != 0 {
		num *= 2
		if num >= 1 {
			result = append(result, '1')
			num -= 1
		} else {
			result = append(result, '0')
		}
		if len(result) == 31 && num != 0 {
			return "ERROR"
		}
	}
	return "0." + string(result)
}

/*
直接按转换法则运算即可

十进制的小数转换为二进制，主要是小数部分乘以2，取整数部分依次从左往右放在小数点后，直至小数点后为0。
例如十进制的0.125，要转换为二进制的小数。
	1、转换为二进制，将小数部分0.125乘以2，得0.25，然后取整数部分0。
	2、再将小数部分0.25乘以2，得0.5，然后取整数部分0。
	3、再将小数部分0.5乘以2，得1，然后取整数部分1。
	4、则得到的二进制的结果就是0.001。
*/
